// <auto-generated />
using System;
using CarWashManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarWashManagementSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CarWashManagementSystem.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("StationNumber")
                        .HasColumnType("smallint");

                    b.Property<int>("StationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StationTypeId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.StationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StationTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StationTypes");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionSourceId")
                        .HasColumnType("int");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.Property<bool>("WasFiscalized")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.HasIndex("TransactionSourceId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.TransactionSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ShouldBeFiscalized")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransactionSources");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.Station", b =>
                {
                    b.HasOne("CarWashManagementSystem.Models.StationType", "StationType")
                        .WithMany("Stations")
                        .HasForeignKey("StationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationType");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.Transaction", b =>
                {
                    b.HasOne("CarWashManagementSystem.Models.Station", "Station")
                        .WithMany("Transactions")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashManagementSystem.Models.TransactionSource", "TransactionSource")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("TransactionSource");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.Station", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.StationType", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("CarWashManagementSystem.Models.TransactionSource", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
